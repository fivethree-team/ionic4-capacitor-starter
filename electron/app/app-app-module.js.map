{"version":3,"sources":["webpack:///./src/app/app/app.module.ts","webpack:///./src/app/app/app.page.html","webpack:///./src/app/app/app.page.scss","webpack:///./src/app/app/app.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAER;AAErC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iDAAO;KACnB;CACF,CAAC;AAWF;IAAA;IAA4B,CAAC;IAAhB,aAAa;QATzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,iDAAO,CAAC;SACxB,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB1B,yIAAyI,QAAQ,qB;;;;;;;;;;;ACAjJ,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACAM;AACjB;AAE5C,qEAAG,CAAa;AAQxB;IAGE,iBAAoB,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAF7C,WAAM,GAAG,EAAE,CAAC;IAEqC,CAAC;IAE5C,0BAAQ,GAAd;;;;;;;wBACE,GAAG,CAAC,WAAW,CAAC,gBAAgB,EAAE,UAAC,KAAe;4BAChD,2CAA2C;4BAC3C,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;4BAC7D,KAAI,CAAC,MAAM,IAAI,sCAAoC,KAAK,CAAC,QAAU,CAAC;4BACpE,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBAES,qBAAM,GAAG,CAAC,YAAY,EAAE;;wBAA9B,GAAG,GAAG,SAAwB;wBACpC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE;4BAClB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;4BAC/C,IAAI,CAAC,MAAM,IAAI,8BAA4B,GAAG,CAAC,GAAK,CAAC;4BACrD,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;yBAC7B;wBAED,GAAG,CAAC,WAAW,CAAC,YAAY,EAAE,UAAC,IAAS;4BACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;4BAChD,KAAI,CAAC,MAAM,IAAI,8BAA4B,GAAG,CAAC,GAAK,CAAC;4BACrD,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBAEH,GAAG,CAAC,WAAW,CAAC,mBAAmB,EAAE,UAAC,IAAS;4BAC7C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;4BACrC,KAAI,CAAC,MAAM,IAAI,yBAAuB,IAAM,CAAC;4BAC7C,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;wBAC9B,CAAC,CAAC,CAAC;;;;;KACJ;IA/BU,OAAO;QALnB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,mFAA8B;;SAE/B,CAAC;+EAI4B,+DAAiB;OAHlC,OAAO,CAiCnB;IAAD,cAAC;CAAA;AAjCmB","file":"app-app-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AppPage } from './app.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AppPage]\n})\nexport class AppPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>App</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  {{output}}\\n\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC9hcHAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Plugins, AppState } from '@capacitor/core';\nimport { fromEvent, fromEventPattern } from 'rxjs';\nconst { App } = Plugins;\n\n\n@Component({\n  selector: 'app-app',\n  templateUrl: './app.page.html',\n  styleUrls: ['./app.page.scss'],\n})\nexport class AppPage implements OnInit {\n  output = '';\n\n  constructor(private change: ChangeDetectorRef) { }\n\n  async ngOnInit() {\n    App.addListener('appStateChange', (state: AppState) => {\n      // state.isActive contains the active state\n      console.log('App state changed. Is active?', state.isActive);\n      this.output += `\\n App state changed. Is active? ${state.isActive}`;\n      this.change.detectChanges();\n    });\n\n    const ret = await App.getLaunchUrl();\n    if (ret && ret.url) {\n      console.log('App opened with URL: ' + ret.url);\n      this.output += `\\n App opened with URL:  ${ret.url}`;\n      this.change.detectChanges();\n    }\n\n    App.addListener('appUrlOpen', (data: any) => {\n      console.log('App opened with URL: ' + data.url);\n      this.output += `\\n App opened with URL:  ${ret.url}`;\n      this.change.detectChanges();\n    });\n\n    App.addListener('appRestoredResult', (data: any) => {\n      console.log('Restored state:', data);\n      this.output += `\\n Restored state:  ${data}`;\n      this.change.detectChanges();\n    });\n  }\n\n}\n"],"sourceRoot":""}