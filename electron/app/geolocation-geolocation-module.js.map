{"version":3,"sources":["webpack:///./src/app/geolocation/geolocation.module.ts","webpack:///./src/app/geolocation/geolocation.page.html","webpack:///./src/app/geolocation/geolocation.page.scss","webpack:///./src/app/geolocation/geolocation.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEQ;AAErD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,iJAAiJ,oBAAoB,mB;;;;;;;;;;;ACArK,+DAA+D,mJ;;;;;;;;;;;;;;;;;;ACAb;AACa;AAEvD,qFAAW,CAAa;AAShC;IAIE;IAAgB,CAAC;IAEX,kCAAQ,GAAd;;;;;wBACE,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;wBACvC,qBAAM,IAAI,CAAC,kBAAkB,EAAE;;wBAA/B,SAA+B,CAAC;;;;;KACjC;IAEK,4CAAkB,GAAxB;;;;;;;wBAEI,SAAI;wBAAe,qBAAM,WAAW,CAAC,kBAAkB,EAAE;;wBAAzD,GAAK,WAAW,GAAG,SAAsC,CAAC;;;;wBAE1D,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAG,CAAC,CAAC;;;;;;KAEtD;IAED,uCAAa,GAAb;QAAA,iBAQC;QAPC,IAAM,IAAI,GAAG,WAAW,CAAC,aAAa,CAAC,EAAE,EAAE,UAAC,QAAQ,EAAE,GAAG;YACvD,IAAI,CAAC,GAAG,EAAE;gBACR,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;aAC7B;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC;aACpD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA3BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2GAAsC;;SAEvC,CAAC;;OACW,eAAe,CA6B3B;IAAD,sBAAC;CAAA;AA7B2B","file":"geolocation-geolocation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeolocationPage } from './geolocation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeolocationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GeolocationPage]\n})\nexport class GeolocationPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>geolocation</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  {{coordinates |Â json}}\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlb2xvY2F0aW9uL2dlb2xvY2F0aW9uLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Plugins, GeolocationPosition } from '@capacitor/core';\n\nconst { Geolocation } = Plugins;\n\n\n\n@Component({\n  selector: 'app-geolocation',\n  templateUrl: './geolocation.page.html',\n  styleUrls: ['./geolocation.page.scss'],\n})\nexport class GeolocationPage implements OnInit {\n\n  coordinates: GeolocationPosition;\n\n  constructor() { }\n\n  async ngOnInit() {\n    console.log('get initial geolocation');\n    await this.getCurrentPosition();\n  }\n\n  async getCurrentPosition() {\n    try {\n      this.coordinates = await Geolocation.getCurrentPosition();\n    } catch (err) {\n      console.log('Error getting current position', err);\n    }\n  }\n\n  watchPosition() {\n    const wait = Geolocation.watchPosition({}, (position, err) => {\n      if (!err) {\n        this.coordinates = position;\n      } else {\n        console.log('Error watching for Geolocation', err);\n      }\n    });\n  }\n\n}\n"],"sourceRoot":""}